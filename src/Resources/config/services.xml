<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="AulaSoftwareLibre\DDD\BaseBundle\Command\CreateEventStreamCommand">
            <argument id="Prooph\EventStore\EventStore" type="service" />
            <tag name="console.command" />
        </service>

        <service id="AulaSoftwareLibre\DDD\BaseBundle\Prooph\EventStoreBusBridge\MessengerEventPublisher">
            <argument id="event.bus" type="service" />
            <tag name="prooph_event_store.default.plugin" />
        </service>

        <service id="doctrine.pdo.connection" class="\PDO">
            <factory service="database_connection" method="getWrappedConnection" />
        </service>

        <service id="prooph_event_sourcing.aggregate_translator" class="Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator" />
        <service id="prooph_event_store.single_stream_strategy" class="Prooph\EventStore\Pdo\PersistenceStrategy\PostgresSingleStreamStrategy" />

        <service id="AulaSoftwareLibre\DDD\BaseBundle\MessageBus\QueryBus">
            <argument type="service" id="query.bus" />
        </service>

        <service id="AulaSoftwareLibre\DDD\BaseBundle\MessageBus\CommandBus">
            <argument type="service" id="command.bus"/>
        </service>

        <service id="AulaSoftwareLibre\DDD\BaseBundle\MessageBus\EventBus">
            <argument type="service" id="event.bus"/>
        </service>

        <service id="Prooph\EventStore\Pdo\PostgresEventStore">
            <argument id="prooph_event_store.message_factory" type="service" />
            <argument id="doctrine.pdo.connection" type="service" />
            <argument id="prooph_event_store.single_stream_strategy" type="service" />
        </service>
        <service id="Prooph\EventStore\EventStore" alias="Prooph\EventStore\Pdo\PostgresEventStore" />

        <service id="Prooph\SnapshotStore\Pdo\PdoSnapshotStore">
            <argument id="doctrine.pdo.connection" type="service" />
        </service>
        <service id="Prooph\SnapshotStore\SnapshotStore" alias="Prooph\SnapshotStore\Pdo\PdoSnapshotStore" />
    </services>
</container>
